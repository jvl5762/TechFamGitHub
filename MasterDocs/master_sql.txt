CREATE TABLE Address
( address_id     INTEGER,
  app_num        STRING,
  street_address STRING,
  city           STRING,
  state          STRING,
  zip            INTEGER,
  supplier_id    INTEGER,
  PRIMARY KEY (address_id),
  FOREIGN KEY (supplier_id) REFERENCES Suppliers (supplier_id));

CREATE TABLE Sales_Item
( item_id        INTEGER,
  count          INTEGER,
  brand          STRING,
  list_price     DECIMAL(2),
  condition      STRING,
  description    STRING,
  name           STRING,
  reserved_price DECIMAL(2),
  category_id    INTEGER NOT NULL,
  supplier_id    INTEGER,
  PRIMARY KEY (item_id),
  FOREIGN KEY (category_id) REFERENCES Category (category_id),
  FOREIGN KEY (supplier_id) REFERENCES Suppliers (supplier_id));

CREATE TABLE Footwear
( size    DECIMAL(1),
  item_id INTEGER,
  PRIMARY KEY (item_id),
  FOREIGN KEY (item_id) REFERENCES Sales_Item (item_id)
  ON DELETE CASCADE);

CREATE TABLE Custom_Shoe
( tong_style   STRING,
  sole_style   STRING,
  shoe_style   STRING,
  color        STRING,
  side_img_id  INTEGER NOT NULL,
  front_img_id INTEGER NOT NULL,
  back_img_id  INTEGER NOT NULL,  
  item_id      INTEGER,
  PRIMARY KEY (item_id),
  FOREIGN KEY (side_img_id) REFERENCES Image (img_id),
  FOREIGN KEY (front_img_id) REFERENCES Image (img_id),
  FOREIGN KEY (back_img_id) REFERENCES Image (img_id),
  FOREIGN KEY (item_id) REFERENCES Footwear (item_id),
  ON DELETE CASCADE);

CREATE TABLE Rating
( rating_id   INTEGER,
  explanation STRING,
  value       REAL,
  username    STRING,
  supplier_id INTEGER,
  PRIMARY KEY (rating_id)
  FOREIGN KEY (username) REFERENCES Registered_Users (username),
  FOREIGN KEY (supplier_id) REFERENCES Suppliers (supplier_id));

CREATE TABLE Category
( category_id   INTEGER,
  description   STRING,
  category_name STRING,
  parent_id     INTEGER,
  PRIMARY KEY (category_id),
  FOREIGN KEY (parent_id) REFERENCES Category (category_id)); 

CREATE TABLE Image
( img_id INTEGER,
  image  BLOB,
  PRIMARY KEY (img_id));
  
CREATE TABLE Suppliers (
	supplier_id	INTEGER,
	email		STRING,
	name		STRING,
	PRIMARY KEY (supplier_id)
);

CREATE TABLE Company (
	point_of_contact	STRING,
	supplier_id		INTEGER,
	PRIMARY KEY (supplier_id),
	FOREIGN KEY (supplier_id) REFERENCES Suppliers (supplier_id) ON DELETE CASCADE
);

CREATE TABLE Credit_Card (
	number		INTEGER,
	name		STRING,
	type		STRING,
	expiration	TIMESTAMP,
	PRIMARY KEY (number)
);

CREATE TABLE Auction (
	timestamp_start		TIMESTAMP,
	timestamp_end		TIMESTAMP,
	item_id			INTEGER NOT NULL,
	PRIMARY KEY (timestamp_start, item_id),
	FOREIGN KEY (item_id) REFERENCES Sales_Item (item_id) ON DELETE CASCADE
);

CREATE TABLE Bid (
	bid_id			INTEGER,
	amount			DECIMAL(2),
	cancellation_timestamp	TIMESTAMP,
	item_id			INTEGER NOT NULL,
	PRIMARY KEY (bid_id),
	FOREIGN KEY (item_id) REFERENCES Sales_Item (item_id) ON DELETE CASCADE
);

CREATE TABLE Phone (
	phone_number	INTEGER,
	PRIMARY KEY (phone_number)
);

CREATE TABLE Sale (
	transaction_id		INTEGER,
	price			DECIMAL(2),
	date			DATE,
	auction_or_sale		BOOLEAN,
	item_id			INTEGER NOT NULL,
	username		STRING NOT NULL,
	credit_card_number	INTEGER NOT NULL,
	PRIMARY KEY (transaction_id),
	FOREIGN KEY (item_id) REFERENCES Sales_Item (item_id),
	FOREIGN KEY (username) REFERENCES Registered_Users (username),
	FOREIGN KEY (credit_card_number) REFERENCES Credit_Card (credit_card_number)
);

CREATE TABLE bid_by (
	max_amount	DECIMAL(2),
	is_auto		BOOLEAN,
	bid_id		INTEGER,
	username	STRING,
	PRIMARY KEY (bid_id, username),
	FOREIGN KEY (bid_id) REFERENCES Bid(bid_id) ON DELETE CASCASE,
	FOREIGN KEY (username) REFERENCES Registered_Users(username)
);

CREATE TABLE Register_Users (
	username STRING,
	password STRING,
	email STRING,
	age INT,
	gender CHAR(10),
	income REAL,
	name STRING,
	supplier_id INT,
	UNIQUE (username),
	PRIMARY KEY (username));
CREATE TABLE UPS (
	shipping_id INT,
	shipping_date DATE,
	shipping_method STRING,
	buyer_information STRING,
	transaction_id STRING,
	PRIMARY KEY (shipping_id),
	FOREIGN KEY (transaction_id) REFERENCES Sale (transaction_id));
CREATE TABLE Customer_Service (
	customer_service_id INT,
	email STRING,
	faqs STRING,
	phone_number INTEGER,
	PRIMARY KEY (customer_service_id),
	FOREIGN KEY (phone_number) REFERENCES Phone (phone_number));
CREATE TABLE shipped_from (
	address_id INT,
	item_id INT,
	PRIMARY KEY (item_id, address_id),
	FOREIGN KEY (item_id, address_id) REFERENCES Sales_Item (item_id), Address (address_id)
	ON DELETE NO ACTION);
CREATE TABLE has_visual (
	item_id INT,
	img_id INT,
	color STRING,
	FOREIGN KEY (item_id, img_id) REFERENCES Sales_Item (item_id), Image (img_id) 
	ON DELETE CASCADE);
CREATE TABLE contact_by (
	phone_number INT,
	suppliers_id 
	PRIMARY KEY (phone_number, suppliers_id)
	FOREIGN KEY (phone_number, suppliers_id) REFERENCES Phone (phone_number), Suppliers (suppliers_id) );
CREATE TABLE pays_with (
	username STRING,
	number INT,
	address_id INT,
	PRIMARY KEY (username, number, address_id) 
	FOREIGN KEY (username, number, address_id) REFERENCES Register_Users (username), Credit_Card (number), Address (address_id));
CREATE TABLE Register_Users (
	username STRING,
	password STRING,
	email STRING,
	age INTEGER,
	gender CHAR(10),
	income REAL,
	name STRING,
	supplier_id INTEGER,
	UNIQUE (username),
	PRIMARY KEY (username));
CREATE TABLE UPS (
	shipping_id INTEGER,
	shipping_date DATE,
	shipping_method STRING,
	buyer_information STRING,
	transaction_id STRING,
	PRIMARY KEY (shipping_id),
	FOREIGN KEY (transaction_id) REFERENCES Sale (transaction_id));
CREATE TABLE Customer_Service (
	customer_service_id INTEGER,
	email STRING,
	faqs STRING,
	phone_number INTEGER,
	PRIMARY KEY (customer_service_id),
	FOREIGN KEY (phone_number) REFERENCES Phone (phone_number));
CREATE TABLE shipped_from (
	address_id INTEGER,
	item_id INTEGER,
	PRIMARY KEY (item_id, address_id),
	FOREIGN KEY (item_id, address_id) REFERENCES Sales_Item (item_id), Address (address_id)
	ON DELETE NO ACTION);
CREATE TABLE has_visual (
	item_id INTEGER,
	img_id INTEGER,
	color STRING,
	FOREIGN KEY (item_id, img_id) REFERENCES Sales_Item (item_id), Image (img_id) 
	ON DELETE CASCADE);
CREATE TABLE contact_by (
	phone_number INTEGER,
	suppliers_id 
	PRIMARY KEY (phone_number, suppliers_id)
	FOREIGN KEY (phone_number, suppliers_id) REFERENCES Phone (phone_number), Suppliers (suppliers_id) );
CREATE TABLE pays_with (
	username STRING,
	number INTEGER,
	address_id INTEGER,
	PRIMARY KEY (username, number, address_id) 
	FOREIGN KEY (username, number, address_id) REFERENCES Register_Users (username), Credit_Card (number), Address (address_id));
	
